#!/bin/bash -e
cd "$(dirname "$0")/.."

outdir=docs
if [[ "$1" != "" ]]; then outdir=$1 ; fi

if [[ "node_modules/typescript/lib/lib.dom.d.ts" -nt "$outdir/lib.dom.d.ts" ]] || \
   [[ "node_modules/typescript/lib/lib.dom.iterable.d.ts" -nt "$outdir/lib.dom.d.ts" ]] || \
   [[ "$0" -nt "$outdir/lib.dom.d.ts" ]]
then

node - "$outdir/lib.dom.d.ts" <<__JS
const outfile = process.argv[2]
const fs = require("fs")
const crypto = require("crypto")
const Path = require("path")

let s = ""
s = fs.readFileSync("node_modules/typescript/lib/lib.dom.d.ts", "utf8") + "\n" +
    fs.readFileSync("node_modules/typescript/lib/lib.dom.iterable.d.ts", "utf8")

s = s.replace(/declare\s+|\/\/\/\s*<reference[^\r\n]+/g, "")

s = 'declare namespace WebDOM {\n' +
    s + "\n" +
    "} // namespace WebDOM\n"


const hash = crypto.createHash("sha1")
hash.update(s)
let version = hash.digest("base64").replace(/=+/g, "")
let tslib_info = (
  "// generated by $0\n" +
  "export const dom = " + JSON.stringify({
    version,
    filename: Path.basename(outfile),
  }) + ";\n"
)

console.log("Write", outfile)
fs.writeFileSync(outfile, s, "utf8")

let infofile = "src/app/tslib-info.ts"
if (fs.readFileSync(infofile, "utf8") != tslib_info) {
  console.log("Write", infofile)
  fs.writeFileSync(infofile, tslib_info, "utf8")
}

__JS
fi
