// Automatically generated by misc/build-worker-template.js.
// Do not edit manually -- instead, run misc/build-worker-template.js

// src/app/worker-template.js
export const worker = [
  "(function(_postMessage,importScripts,_close,globalObj){const requestIdProp=\"__scripterRequestId\";const requestErrProp=\"__scripterRequestError\";let recvp,recvres,recvrej;let msgq=[];let requestq=[];let workerInitialized=!1;function recv(){if(!recvp){if(msgq.length>0){return Promise.resolve(msgq.shift())}recvp=new Promise((res,rej)=>{recvres=res;recvrej=rej})}return recvp}function onInit(err){workerInitialized=!0;requestq.forEach(r=>handleRequest(r));requestq=null}function handleRequest(data){const requestId=data[requestIdProp];const f=globalObj.onrequest;const response={[requestIdProp]:requestId};let r=null;if(f){try{r=f({id:requestId,data:data.data})}catch(err){response[requestErrProp]=String(err.stack||err)}}else{response[requestErrProp]=\"No onrequest handler registered in worker\"}const reply=r2=>{response.data=r2;postMessage(response)};if(r instanceof Promise){r.then(reply).catch(err=>{console.log(\"[worker] error in promise\");response[requestErrProp]=String(err?err.stack||err:\"error\");reply(null)})}else{reply(r)}}globalObj.addEventListener(\"message\",ev=>{if(ev.data&&typeof ev.data==\"object\"&&requestIdProp in ev.data){if(!workerInitialized){requestq.push(ev.data)}else{handleRequest(ev.data)}ev.stopPropagation();ev.preventDefault();return}if(recvp){recvp=null;recvres(ev.data)}else if(!workerInitialized||msgq.length<10){msgq.push(ev.data)}},{capture:!0});globalObj.addEventListener(\"messageerror\",ev=>{if(recvp){recvp=null;recvrej(ev.data)}});function postMessage(data,transfer){return _postMessage({data,transfer},transfer)}function print(...msg){console.log(...msg)}function send(){return postMessage.apply(globalObj,arguments)}function close(){postMessage({type:\"__scripter_close\"});_close()}function __onerror(err){postMessage({type:\"__scripter_toplevel_err\",message:err?String(err):\"unknown error\",stack:err&&err.stack||\"\"})}try{let r=eval((",
  "))((()=>{let w=Object.create(globalObj);w.send=w.postMessage=postMessage;w.recv=recv;w.close=close;w.print=print;w.importScripts=importScripts;w.importCommonJS=url=>{globalObj.exports={};globalObj.module={id:\"scripter\",exports:globalObj.exports};return importScripts(url).then(()=>{let exports=globalObj.module.exports;delete globalObj.module;delete globalObj.exports;return exports})};Object.defineProperties(w,{onmessage:{get(){return globalObj.onmessage},set(f){globalObj.onmessage=f},enumerable:!0},onrequest:{get(){return globalObj.onrequest},set(f){globalObj.onrequest=f},enumerable:!0}});return w})());onInit(null);if(r instanceof Promise){r.catch(__onerror)}}catch(err){console.warn(\"error in worker-template\",err);onInit(err);__onerror(err)}})(postMessage,typeof __scripterImportScripts!=\"undefined\"?__scripterImportScripts:(importScripts=>(...urls)=>{importScripts(...urls);return Promise.resolve()})(self.importScripts.bind(self)),typeof __scripterClose!=\"undefined\"?__scripterClose:self.close.bind(self),typeof window!=\"undefined\"?window:self);\n"
];

// src/app/worker-frame-template.js
export const frame = [
  "(scriptfn=>{function importScripts(...urls){return Promise.all(urls.map(url=>new Promise((resolve,reject)=>{let s=document.createElement(\"script\");s.src=url;s.type=\"text/javascript\";s.async=!0;s.onload=resolve;s.onerror=reject;document.head.appendChild(s)})))}function postMessage(msg,transfer){window.parent.postMessage(msg,\"*\",transfer)}postMessage(\"__scripter_iframe_ready\");function close(){postMessage(\"__scripter_iframe_close\")}scriptfn(window,postMessage,importScripts,close)})((self,postMessage,__scripterImportScripts,__scripterClose)=>{",
  "});\n"
];
