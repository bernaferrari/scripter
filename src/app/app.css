/* reset */
* { font-family: inherit; line-height: inherit; font-synthesis: none; }
a, abbr, acronym, address, applet, article, aside, audio, b, big, blockquote,
body, canvas, caption, center, cite, code, dd, del, details, dfn, div, dl, dt,
em, embed, fieldset, figcaption, figure, footer, form, grid, h1, h2, h3, h4, h5,
h6, header, hgroup, hr, html, i, iframe, img, ins, kbd, label, legend, li, main,
mark, menu, nav, noscript, object, ol, output, p, pre, q, s, samp, section,
small, span, strike, strong, sub, summary, sup, table, tbody, td, tfoot, th,
thead, time, tr, tt, u, ul, var, video {
  margin: 0;
  padding: 0;
  border: 0;
  vertical-align: baseline;
}
blockquote, q { quotes: none; }
blockquote:before, blockquote:after, q:before, q:after {
  content: "";
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
a, a:active, a:visited { color: inherit; }
/* end of reset */

:root {
  --toolbarHeight: 32px;
  --messageHeight: 48px;
  --menuWidth: 160px;
  --colorFeedback: #f5f5f5;
  --colorSelected: #e9e9e9;
  --inlineWidgetWidth: 450px;
  --sansFontFamily: "Inter";
  --uiScale: 1;  /* user-configurable */
  --red: #F03009;
}

body {
  background: transparent;
  color: #222;
  overflow: hidden;

  &.windowWidthSmall { /* WindowSize.SMALL */
    --inlineWidgetWidth: 260px;
  }
  &.windowWidthMedium { /* WindowSize.MEDIUM */
    --inlineWidgetWidth: 460px;
  }
  &.windowWidthLarge { /* WindowSize.LARGE */
    --inlineWidgetWidth: 660px;
  }
  &.windowWidthXLarge { /* WindowSize.XLARGE */
    --inlineWidgetWidth: 760px;
  }
}
body, .sansSerif {
  font: 12px/16px var(--sansFontFamily), system-ui, -system-ui, sans-serif;
  font-feature-settings: 'kern' 1, 'liga' 1, 'calt' 1;
}
@supports (font-variation-settings: normal) {
  :root { --sansFontFamily: 'Inter var' }
}

b, strong { font-weight:600 }
em, i { font-style:italic }

code, pre, textarea.code, tt, .monospace, .monaco-editor {
  font-family: iaw-quattro-var, iaw-quattro, monospace;
  font-feature-settings: 'calt' 1, 'kern' 1, 'liga' 1, 'ss04' 1;
  /*
    ss01: single-storey a
    ss02: double-storey g
    ss03: zero with slash (instead of dotted zero)
    ss04: zero without decoration (simple open zero)
  */
}
pre { white-space:pre-wrap }
code { white-space:nowrap }
code b, pre b, tt b { font-weight:540 }


#progress-spinner {}


@keyframes button-flash {
  0%   { background: lightgreen; }
  100% {  }
}


.button {
  flex: 0 0 auto;
  display: block;
  width: var(--toolbarHeight);
  height: var(--toolbarHeight);
  line-height: var(--toolbarHeight);
  text-align: center;
  cursor: default;
  user-select: none;
  opacity: 0.8;
  /*transition: background 200ms ease-out;*/
  background-position: center center;
  background-repeat: no-repeat;

  &:hover { opacity:1; background-color: #eee; }
  &:active { opacity:1; background-color: #ccc; }
  &.flash { animation: button-flash 200ms 1; }
}


.button {
  &.new         { background-image: url("./icon-add.svg") }
  &.menu        { background-image: url('./icon-menu.svg') }
  &.run         { background-image: url('./icon-play.svg') }
  &.run.running { background-image: url("./icon-stop.svg") }
  &.clear       { background-image: url('./icon-clear.svg') }
  &.save        { background-image: url('./icon-save.svg') }
  &.saved       { background-image: url('./icon-saved.svg') }
}

#toolbar {
  --numButtonsOnSide: 3;  /* max # buttons on either side */
  position: absolute;
  left: 0; right:0; bottom: 0;
  height: var(--toolbarHeight);
  background: #eee;
  color: #333;
  z-index:3;
  display: flex;
  /*justify-content: space-between;*/

  /* match figma dialog corner radius */
  border-bottom-left-radius: 2px;
  border-bottom-right-radius: 2px;

  --buttonGroupWidth: calc(var(--toolbarHeight) * var(--numButtonsOnSide));
  --hoverBGColor: rgba(0,0,0,0.07);

  & .title {
    position: absolute;
    top:0;
    bottom:0;
    left:  var(--buttonGroupWidth);
    right: var(--buttonGroupWidth);
    cursor: text;

    display: flex;
    justify-content: center;
    align-items: center;

    & input {
      flex: 1 1 auto;
      min-width: 32px;
      background: none;
      height: calc(var(--toolbarHeight) - 12px);
      border: none;
      border-radius: 2px;
      text-align: center;
      font: inherit;
      font-weight: 500;
      color: #333;
      outline: none;
      margin: 0 8px;
      overflow: hidden;
      text-overflow: ellipsis;

      &:hover, &:focus {
        color: black;
        box-shadow: 0 0 0 1px var(--hoverBGColor);
      }

      &:focus {
        background: white;
      }

      &[readonly]:focus, &[readonly]:hover {
        background: none;
        box-shadow: none;
      }
    }

    &:hover {
      color: black;
    }
  }

  & .button {
    &:hover { opacity:1; background-color: var(--hoverBGColor); }
    &:active { opacity:1; background-color: #aaa; }
    &:first-child { border-bottom-left-radius:2px; } /* fit figma window */
    &:last-child { border-bottom-right-radius:2px; } /* fit figma window */
    &.menu.on {
      opacity:1;
      background-color: #ddd;
      &:hover { background-color: #ccc; }
      &:active { background-color: #bbb; }
    }
    &.unavailable {
      opacity:0.2;
      &:hover { background-color: inherit; }
    }
    &.saved {
      display: none;
      /*&:hover { background-color: inherit; }*/
    }
  }

  & .spacer { flex: 1 1 auto; }

} /* #toolbar */

body.windowWidthSmall #toolbar .title.focus {
  /* expand the title in edit mode when the window size is small */
  margin:0 calc(calc(var(--buttonGroupWidth) * -1));
  z-index:9;
}



#menu {
  --menuItemHeight: 24px;

  position: absolute;
  left:0;
  top:0;
  bottom: 0;

  background: #fff;
  border-right: 1px solid #ddd;
  z-index: 3;
  width: var(--menuWidth);
  flex: 0 0 auto;
  outline: none;
  font-size: 11px;
  letter-spacing: 0.005em;
  padding-bottom: var(--menuItemHeight);

  overflow: auto;

  flex-direction:column;
  display:none;
  &.visible { display:flex; }

  & * { font-size: inherit; }

  & .button {
    border-radius: 2px;
    width:var(--menuItemHeight);
    height:var(--menuItemHeight);
    margin: 8px 8px 0 10px;
  }

  & h3, & h4 {
    padding: 0 16px;
    margin-top: 16px;
    height: var(--menuItemHeight);
    line-height: var(--menuItemHeight);
    font-weight: inherit;
    color: #bbb;
    user-select: none;
    cursor: default;
  }
  /*& h3 {
    font-size: 8px;
    line-height: 16px;
    height:16px;
    background: #eee;
    font-weight: 600;
    letter-spacing: 0.1em;
    margin-bottom: 8px;
    text-transform: uppercase;
    padding-top:0;
    padding-bottom:0;
  }*/
  & h3 {
    color: #333;
    border-top: 1px solid #ddd;
    padding-top: 8px;
    padding-bottom: 8px;
    font-weight:600;
  }
  & .examples:first-child h3 {
    border-top:0;
    margin-top:0;
  }

  & ul {
    list-style:none;

    & li {
      display: flex;
      height: var(--menuItemHeight);
      /*background:lightpink;*/
      display:flex;
      align-items:center;
      padding: 0 4px 0 16px;
      user-select: none;
      cursor: default;
      color: #444;
      font-weight:500;

      &:hover { color: black; /*background: var(--colorFeedback);*/ }
      &.active { color: black; background: var(--colorSelected); }
      &.unsaved {
        & span {
          font-style:italic;
        }
      }

      & .name {
        flex: 1 1 auto;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }

      & input[type="text"] {
        flex: 1 1 auto;
        font: inherit;
        letter-spacing: inherit;
        margin:0 8px 0 -4px;
        padding: 0 1px 0 4px;
        border: none;
        background: white;
        border-radius: 2px;
        outline: none;
        height: 20px;
      }

      & .button {
        --inlineButtonBorder: 1px;
        --inlineButtonSize: calc(18px - calc(var(--inlineButtonBorder) * 2));
        display:flex;
        justify-content:center;
        flex: 0 0 auto;
        margin: 0;
        width: var(--inlineButtonSize);
        height: var(--inlineButtonSize);
        line-height: var(--inlineButtonSize);
        font-size: 8px;
        /*border-radius: 100%;
        border: var(--inlineButtonBorder) solid rgba(0,0,0,0.4);*/
        /*background: lightpink;*/
        color: black;
        opacity: 0.2;
        font-weight:600;
        display:none;

        &.delete {
          font-size:14px;
          font-weight:400;
        }

        &:hover {
          border-color: black;
          background-color: rgba(0,0,0,0.1);
          opacity: 1;
        }
      }

      &:hover .button {
        display: flex;
      }

    }
  }

  /*&:hover ul .button {
    visibility: visible;
    display: flex;
  }*/

  & > .section {
    height: var(--menuItemHeight);
    font-weight:600;
    display:flex;
    align-items:center;
    justify-content: space-between;
    padding-left:2px;
    user-select: none;
  }

  & hr {
    height:1px;
    border:none;
    background:rgba(0,0,0,0.1);
    margin: 8px;
  }

  & .settings {
    display: flex;
    flex-direction: column;
    padding: 0 8px 0 16px;
    user-select: none;

    & .icon {
      width: var(--menuItemHeight);
      height: var(--menuItemHeight);
      background-position: center center;
      background-repeat: no-repeat;
      background-size: contain;
      opacity: 0.8;
      margin-left: -6px;
      &.delay { background-image: url('./icon-delay.svg'); }
      /*&.window-size { background-image: url('./icon-window-size.svg'); }*/
      &.window { background-image: url('./icon-window.svg'); }
    }

    & label {
      display: block;
      height: var(--menuItemHeight);
      cursor: default;
      display:flex;
      align-items:center;

      &.disabled {
        opacity:0.4;
      }

      /*&.vertical {
        flex-direction: column;
        align-items: flex-start;
        justify-content: flex-start;
        height: calc(var(--menuItemHeight) * 2);
      }*/

      &.dependant {
        margin-left:19px;
        margin-bottom: 8px;
        transition: all 100ms ease-out;
        /*overflow: hidden;*/
        &.disabled {
          height: 0px;
          opacity:0;
          pointer-events:none;
          margin-bottom: 0;
        }
      }

      & input[type="checkbox"] {
        margin-right: 6px;
        margin-left: 0;
      }

      & input[type="number"] {
        max-width:64px;
        margin: 0 4px;
        border: 1px solid #555;
        border-radius: 2px;
        padding: 0 4px;
        height: calc(var(--menuItemHeight) - 4px);
        background: white;
        box-sizing: border-box;
      }

      & select[name="config.windowSize"] {
        flex: 1 1 auto;
        /*margin-left: 8px;*/
      }
    }
  }
} /* #menu */


#main {
  display: flex;
  position: absolute;
  left: 0; top: 0; right:0; bottom: var(--toolbarHeight);
  & > * {
    flex: 1 1 auto;
  }
}

/* toolbar on top */
#toolbar {
  top: 0; bottom: unset;
  left: 8px; right:4px;
  background: white;
  /*background: #f9f9f9;
  box-shadow:
    0 0.5px 0 0 rgba(0,0,0,0.1),
    0 1px 4px 0 rgba(0,0,0,0.04);*/
  border-radius: 0;
}
#main {
  top: var(--toolbarHeight); bottom: 0;

  /* match figma dialog corner radius */
  border-bottom-left-radius: 2px;
  border-bottom-right-radius: 2px;
}


#message {
  position: absolute;
  left: 0; right:0; bottom: var(--toolbarHeight);
  height: var(--messageHeight);
  background: #FFF866;
  color: black;
  box-shadow: 0 -1px 2px rgba(50,20,0,0.1), 0 -0.5px 0 rgba(0,0,0,0.1);
  z-index:4;
  font-size:11px;
  align-items: center;
  overflow: hidden;
  /*display: flex;*/
  display: none;
}
#message .message {
  flex: 1 1 auto;
  align-items: center;
  max-height: var(--messageHeight);
  overflow: auto;
}
#message .message > p {
  padding: 8px 0;
}
#message div.warning-icon, #message div.close-button {
  flex: 0 0 auto;
  height: var(--messageHeight);
  line-height: var(--messageHeight);
  width: calc(var(--messageHeight) * 0.75);
  text-align: center;
  font-size: 16px;
  cursor: default;
  user-select: none; -webkit-user-select: none; -moz-user-select: none;
}
#message div.close-button { opacity: 0.4 }
#message div.close-button:hover { opacity: 1 }

/*#message > p::before {
  content: "⚠ ";
  font-size: 16px;
  vertical-align: top;
}*/
body.showMessage #message { display: flex }
body.showMessage #editor { bottom: var(--messageHeight); }


#editor {
  position: absolute;
  left: 0; top: 0; right:0; bottom: 0;
  /* for blur effect */
  /*overflow:hidden;*/
  font-feature-settings: 'calt' 1, 'kern' 1, 'liga' 1, 'ss04' 1;
}

body.menuVisible #editor {
  left: var(--menuWidth);
}

.monaco-editor {
  /*& .invisible scrollbar vertical fade*/
  /*& .visible.scrollbar vertical */
  & .scrollbar {
    & .slider {
      border-radius:5px;
    }
  }

  &.scripter-light .margin {
    & .line-numbers {
      color: #ccc;
    }
    & .current-line ~ .line-numbers {
      color: #888;
    }
  }

  & .detected-link {
    /*text-decoration: underline rgba(0, 0, 200, 0.1);*/
    text-decoration: none; /* TODO: support opening links */
  }

  & .lines-content .cigra {
    /* active indentGuide */
    box-shadow: 1px 0 0 0 #ddd inset !important;
  }
}

/*body.menuVisible .monaco-editor {
  -webkit-filter: url('#blur');
  filter: url('#blur');
  -webkit-filter: blur(5px);
  filter: blur(5px);
}*/

/*.monaco-editor .editor-scrollable {
  margin:8px 0;
}*/

/*@supports (font-variation-settings: normal)*/
/* Figma desktop app uses a really old version of chromium lacking vf support */
.monaco-editor.scripter-light .mtk16 { font-weight: 600; font-weight: 520 } /*keyword*/
.monaco-editor.scripter-light .mtk29 { font-weight: 440 } /*type.identifier*/

/* decorate runtime error */
.monaco-editor .runtimeErrorDecoration {
  background: url("./squiggly-line.svg") repeat-x bottom left;
  background-color: rgba(255, 240, 0, 0.2);
}

.monaco-editor .printDecoration {
  background-color: rgba(0, 200, 255, 0.1);
}

.inlineWidget {
  --inlineWidgetLeftPadding: 0.5em;
  --inlineWidgetLeftBorderWidth: 4px;

  z-index: 2;
  overflow: auto;
  width: var(--inlineWidgetWidth);
  line-height: 1.45em;
  font-size: calc(11px * var(--uiScale));

  & img {
    object-position: 50% 50%;
    object-fit: contain;
    object-fit: scale-down;
    object-fit: contain;
    max-width: 100%;
  }

  & > div {  /* container */
    display: flex;
    align-items: flex-start; /* top */
    height: 100%;
    flex: 1 1 auto;

    border-left: var(--inlineWidgetLeftBorderWidth) solid lightblue;
    padding-left: var(--inlineWidgetLeftPadding);
    /*margin-right: 2em;*/
    background: #EEF3FF;

    & > .content {
      flex: 1 1 auto;
    }

    & > .buttons {
      flex: 0 0 auto;
      display: flex;
      flex-direction: row-reverse;  /* newly-added buttons appear to the left */

      & > .button {
        cursor: default;
        width:16px;
        height:16px;
        text-align: center;
        line-height:16px;
        font-size:12px;
        flex: 0 0 auto;
        opacity:0.5;
        user-select: none;
        pointer-events: all;
        color: black;
        font-feature-settings: 'kern' 1, 'liga' 1, 'calt' 1, 'case' 1;
        /*border-radius: 2px;*/
        /*margin:1px;*/

        &:hover {
          opacity:0.99;
          background: rgba(0,0,0,0.1);
        }

        /*&:last-child {
          margin-right: 0.0;
          padding-right: 0.5em;
        }*/

        /*&.closeButton {}*/
      }
    }

  }
}

body.menuVisible .inlineWidget > div {
  width: calc(var(--inlineWidgetWidth) - var(--menuWidth) - 8px);
}

.printWidget > div {
  border-color: lightgreen;
  background: #eeffee;
  /*padding: 0.3em;*/

  & .message {
    flex: 1 1 auto;
    white-space: pre-wrap;
    user-select: all;
    overflow: auto;
  }
}

.inputWidget {
  overflow: initial;
  height: 16px;
  z-index: 3;

  & > div {
    pointer-events: none;
    align-items: stretch;
    & > .content {
      width:100%;
      position: relative;
      pointer-events: all;
    }
  }
}


.rangeControl {
  --rangeHeight: 16px;
  --rangeTrackHeight: 2px;
  --rangeKnobSize: 8px;
  --rangeMaxWidth: 100%;

  z-index:999;

  flex: 1 1 auto;
  min-width: 64px;
  max-width: var(--rangeMaxWidth);
  height: var(--rangeHeight);
  cursor: default;
  position: absolute; left:0; top:0; right:0; bottom:0;

  /* This trick offsets the pointer-events area of the control all the way to the left
   * without moving the track. This way the user can click outside the track.
   */
  margin-left: calc(calc(var(--inlineWidgetLeftBorderWidth) + var(--inlineWidgetLeftPadding)) * -1);
  padding-left: calc(var(--inlineWidgetLeftBorderWidth) + var(--inlineWidgetLeftPadding));

  &.uninit .knob {
    /* disable transitions while the input is uninitialized */
    transition: none !important;
  }

  & .track {
    background: rgba(0,0,0,0.4);
    height: var(--rangeTrackHeight);
    margin: calc(calc(var(--rangeHeight) - var(--rangeTrackHeight)) / 2) 4px;
    position: relative;
    border-radius: calc(var(--rangeTrackHeight) / 2);

    & .knob {
      background: black;
      /*box-shadow: 0 0 0 1px rgba(0,0,0,0.5);*/
      width: var(--rangeKnobSize);
      height: var(--rangeKnobSize);
      border-radius: var(--rangeKnobSize);
      position: absolute;
      left: 0;
      top: calc(calc(var(--rangeTrackHeight) - var(--rangeKnobSize)) / 2);
      pointer-events: none;
      transform: translate(0,0);
      transition: transform 100ms linear;

      background: white;
      box-sizing: border-box;
      border: calc((var(--rangeKnobSize) / 2) - 1px) solid black;

      &.dragging {
        transition-duration: 35ms;
      }
      &.dragging-fine {
        transition: none;
      }

      &.changing {
        box-shadow: 0 0 0 1px rgba(0,0,0,1);
      }
      &.changing .tooltip {
        opacity: 1;
        transition-delay: 1ms;
      }

      & .tooltip {
        position: absolute;
        bottom: calc(
          var(--rangeKnobSize) + 4px  /* TODO: calc the 4px */
        );
        left: calc(
          calc(var(--rangeKnobSize) / 4) +
          calc(var(--rangeMaxWidth) / -2)
        );
        width: var(--rangeMaxWidth);
        height: 24px;
        z-index: 999;
        display: flex;
        justify-content: center;
        /*background: rgba(255,100,0,0.2);*/
        opacity: 0;
        transition: opacity 100ms ease-out;
        transition-delay: 200ms;

        & > div { /* label */
          flex: 0 1 auto;
          background: #333;
          color: white;
          line-height: 16px;
          height: 16px;
          padding: 0 4px;
          font-family: var(--sansFontFamily);
          font-size:11px;
          letter-spacing: 0.01em;
          border-radius: 2px;
        }
      }
    }
  }
}
